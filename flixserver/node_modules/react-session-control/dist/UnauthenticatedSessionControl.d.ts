import { PureComponent } from 'react';
export interface UnauthenticatedSessionControlProps {
    /**Key do check existence in local storage. */
    storageTokenKey: string;
    /**The time in miliseconds to debounce token changes.  */
    tokenChangeDebounceTime?: number;
    /**Callback to be called when token is registered on localStorage. */
    onLogin: () => void;
}
export default class UnauthenticatedSessionControl extends PureComponent<UnauthenticatedSessionControlProps> {
    static defaultProps: Partial<UnauthenticatedSessionControlProps>;
    handleStorageKeyChangeDebounced: any;
    constructor(props: UnauthenticatedSessionControlProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleStorageChange(event: any): void;
    handleStorageKeyChange({ newValue }: any): void;
    render(): boolean;
}
